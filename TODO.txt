

Smarter error messages about input grammar problems. Error message comes from longest matched length.
Comments on input grammar.
Disambiguation algorithm.
Character set design and specification.--How to interpret arbitrary byte sequences


M1 export and H1 export for rule and rulename reconsideration.
M1 export with character class is buggy






Use parentheses to change the direction of OR and sequence, perhaps even other things.

	//comments
  @ operator to suppress display in the tree
	//match until
	//Match except
/*	let grammar2 = `

EXPRESSION = OR[
  INTEGER_WITH_OPERATION_LIST,
  INTEGER
]

INTEGER_WITH_OPERATION_LIST = SEQUENCE[INTEGER, OPERATION_LIST]

OPERATION_LIST = MULTIPLE[
	OR[
		ADDITION_OPERATION,
		SUBTRACTION_OPERATION
	]
]

ADDITION_OPERATION = SEQUENCE['+', INTEGER]


SUBTRACTION_OPERATION = SEQUENCE['-', INTEGER]

INTEGER = CHARACTER_CLASS['0123456789']

There is an issue with MULTIPLE, CHARACTER_CLASS and partial matches.
When matching MULTIPLE[SEQUENCE[CHARACTER_CLASS['0123456789'], ]]
`*/
	//Maybe OR should be renamed to MATCH_FIRST_OF
	//CHARACTER_CLASS['0123456789'] matches 100+3, but is this the best behaviour? Should it be called STARTS_WITH?
	//STARTS_WITH[MULTIPLE[CHARACTER_CLASS]]
	//ability to filter a tree by node type
	//Match ANYTHING
	//Refactor depth away


--Get rid of human-written parser and
--deal with the case where there are right brackets inside of quotes[]
--handle the case of left recursion problems

aliases don't work: (example)
EXPRESSION = TERM